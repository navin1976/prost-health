---
// Clinical Risk Visualization Component
// Evidence-based medical comparison using icon grids with Material Design
---

<div class="clinical-visualization" id="clinical-viz">
  <!-- Header with clear clinical context -->
  <div class="viz-header">
    <div class="header-content">
      <h3 class="viz-title">Clinical Outcomes: Real Patient Impact</h3>
      <p class="viz-subtitle">Per 100 Patients Screened</p>
    </div>
    <div class="method-toggle">
      <button class="method-btn active" data-method="mri">
        <svg class="method-icon" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-2-8c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zm4 0c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zm-4-3c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zm4 0c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1z"/>
        </svg>
        <span class="method-name">MRI-First</span>
      </button>
      <button class="method-btn" data-method="traditional">
        <svg class="method-icon" viewBox="0 0 24 24" fill="currentColor">
          <path d="M15 8H9V6h6v2zm0 4H9v-2h6v2zm0 4H9v-2h6v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z"/>
        </svg>
        <span class="method-name">Traditional Biopsy</span>
      </button>
    </div>
  </div>

  <!-- Main visualization area -->
  <div class="viz-main">
    <!-- Accuracy Visualization -->
    <div class="metric-section">
      <div class="metric-header">
        <div class="metric-title">
          <svg class="metric-icon" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
          </svg>
          <h4>Cancers Correctly Identified</h4>
        </div>
        <div class="metric-value" id="accuracy-value">96/100</div>
      </div>
      <div class="icon-grid-container">
        <div class="icon-grid" id="accuracy-grid">
          <!-- Icons will be generated by JavaScript -->
        </div>
        <div class="grid-legend">
          <div class="legend-item">
            <svg class="legend-icon success" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
            <span>Detected</span>
          </div>
          <div class="legend-item">
            <svg class="legend-icon danger" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
            </svg>
            <span>Missed</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Complications Visualization -->
    <div class="metric-section">
      <div class="metric-header">
        <div class="metric-title">
          <svg class="metric-icon" viewBox="0 0 24 24" fill="currentColor">
            <path d="M20.5 6c-2.61.7-5.67 1-8.5 1s-5.89-.3-8.5-1L3 8c1.86.5 4 .83 6 1v13h2v-6h2v6h2V9c2-.17 4.14-.5 6-1l-.5-2zM12 6c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"/>
          </svg>
          <h4>Patients With Complications</h4>
        </div>
        <div class="metric-value" id="complication-value">2/100</div>
      </div>
      <div class="icon-grid-container">
        <div class="icon-grid" id="complication-grid">
          <!-- Icons will be generated by JavaScript -->
        </div>
        <div class="grid-legend">
          <div class="legend-item">
            <svg class="legend-icon success" viewBox="0 0 24 24" fill="currentColor">
              <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
            </svg>
            <span>No Issues</span>
          </div>
          <div class="legend-item">
            <svg class="legend-icon danger" viewBox="0 0 24 24" fill="currentColor">
              <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
            </svg>
            <span>Complications</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Unnecessary Procedures Visualization -->
    <div class="metric-section">
      <div class="metric-header">
        <div class="metric-title">
          <svg class="metric-icon" viewBox="0 0 24 24" fill="currentColor">
            <path d="M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
          </svg>
          <h4>Unnecessary Procedures Avoided</h4>
        </div>
        <div class="metric-value" id="unnecessary-value">96/100</div>
      </div>
      <div class="icon-grid-container">
        <div class="icon-grid" id="unnecessary-grid">
          <!-- Icons will be generated by JavaScript -->
        </div>
        <div class="grid-legend">
          <div class="legend-item">
            <svg class="legend-icon success" viewBox="0 0 24 24" fill="currentColor">
              <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
            </svg>
            <span>Appropriate</span>
          </div>
          <div class="legend-item">
            <svg class="legend-icon warning" viewBox="0 0 24 24" fill="currentColor">
              <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
            </svg>
            <span>Unnecessary</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Clinical Summary -->
  <div class="clinical-summary">
    <div class="summary-content">
      <h4 class="summary-title">Clinical Significance</h4>
      <p class="summary-text" id="summary-text">
        MRI-first approach reduces unnecessary procedures by 70% while maintaining 96% sensitivity for clinically significant cancer.
      </p>
    </div>
    <div class="evidence-badge">
      <svg class="badge-icon" viewBox="0 0 24 24" fill="currentColor">
        <path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"/>
      </svg>
      <span class="badge-text">NICE Guidelines Supported</span>
    </div>
  </div>
</div>

<style>
  .clinical-visualization {
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    border-radius: 16px;
    padding: 2rem;
    margin: 2rem 0;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
    border: 2px solid #e2e8f0;
  }

  .viz-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2.5rem;
    flex-wrap: wrap;
    gap: 1.5rem;
  }

  .header-content {
    flex: 1;
  }

  .viz-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #0f172a;
    margin: 0 0 0.25rem 0;
    font-family: var(--font-serif);
  }

  .viz-subtitle {
    font-size: 1rem;
    color: #64748b;
    margin: 0;
    font-weight: 600;
  }

  .method-toggle {
    display: flex;
    background: white;
    border-radius: 12px;
    padding: 0.375rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    border: 2px solid #e2e8f0;
  }

  .method-btn {
    display: flex;
    align-items: center;
    gap: 0.625rem;
    padding: 0.875rem 1.25rem;
    border: none;
    background: transparent;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-weight: 600;
    color: #475569;
    position: relative;
    overflow: hidden;
  }

  .method-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-accent, #1B4332);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 0;
  }

  .method-btn:hover::before {
    opacity: 0.05;
  }

  .method-btn.active {
    background: var(--color-accent, #1B4332);
    color: white;
    box-shadow: 0 4px 12px rgba(27, 67, 50, 0.4);
  }

  .method-btn.active::before {
    opacity: 1;
  }

  .method-icon {
    width: 1.5rem;
    height: 1.5rem;
    position: relative;
    z-index: 1;
  }

  .method-name {
    font-size: 0.9375rem;
    font-weight: 600;
    position: relative;
    z-index: 1;
  }

  .viz-main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .metric-section {
    background: white;
    border-radius: 12px;
    padding: 1.75rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    border: 2px solid #f1f5f9;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .metric-section:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);
    border-color: var(--color-accent, #1B4332);
  }

  .metric-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.25rem;
  }

  .metric-title {
    display: flex;
    align-items: center;
    gap: 0.625rem;
  }

  .metric-title h4 {
    font-size: 1.0625rem;
    font-weight: 600;
    color: #0f172a;
    margin: 0;
    line-height: 1.3;
  }

  .metric-icon {
    width: 1.5rem;
    height: 1.5rem;
    color: var(--color-accent, #1B4332);
  }

  .metric-value {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--color-accent, #1B4332);
    font-variant-numeric: tabular-nums;
  }

  .icon-grid-container {
    margin-top: 1.5rem;
  }

  .icon-grid {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    gap: 0.375rem;
    margin-bottom: 1rem;
  }

  .grid-icon {
    width: 100%;
    aspect-ratio: 1;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    transform: scale(0.5);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .grid-icon.animate-in {
    opacity: 1;
    transform: scale(1);
  }

  .grid-icon svg {
    width: 70%;
    height: 70%;
  }

  .grid-icon:hover {
    transform: scale(1.15);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }

  .grid-icon.success {
    background: linear-gradient(135deg, #10b981, #059669);
  }

  .grid-icon.success svg {
    fill: white;
  }

  .grid-icon.warning {
    background: linear-gradient(135deg, #f59e0b, #d97706);
  }

  .grid-icon.warning svg {
    fill: white;
  }

  .grid-icon.danger {
    background: linear-gradient(135deg, #ef4444, #dc2626);
  }

  .grid-icon.danger svg {
    fill: white;
  }

  .grid-legend {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
    color: #475569;
  }

  .legend-icon {
    width: 1.25rem;
    height: 1.25rem;
    border-radius: 4px;
  }

  .legend-icon.success {
    fill: #10b981;
  }

  .legend-icon.warning {
    fill: #f59e0b;
  }

  .legend-icon.danger {
    fill: #ef4444;
  }

  .clinical-summary {
    background: linear-gradient(135deg, var(--color-accent, #1B4332) 0%, var(--color-accent-hover, #2D5A3D) 100%);
    border-radius: 12px;
    padding: 1.75rem;
    color: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1.5rem;
    box-shadow: 0 8px 20px rgba(27, 67, 50, 0.3);
  }

  .summary-content {
    flex: 1;
  }

  .summary-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin: 0 0 0.625rem 0;
    font-family: var(--font-serif);
  }

  .summary-text {
    font-size: 0.9375rem;
    line-height: 1.6;
    opacity: 0.95;
    margin: 0;
  }

  .evidence-badge {
    display: flex;
    align-items: center;
    gap: 0.625rem;
    background: rgba(255, 255, 255, 0.2);
    padding: 0.875rem 1.25rem;
    border-radius: 10px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  .badge-icon {
    width: 1.5rem;
    height: 1.5rem;
    fill: white;
  }

  .badge-text {
    font-size: 0.9375rem;
    font-weight: 700;
  }

  /* Mobile optimizations */
  @media (max-width: 768px) {
    .clinical-visualization {
      padding: 1.5rem;
      margin: 1rem 0;
    }

    .viz-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .method-toggle {
      width: 100%;
    }

    .method-btn {
      flex: 1;
      justify-content: center;
      padding: 0.75rem 0.875rem;
    }

    .method-name {
      font-size: 0.8125rem;
    }

    .viz-main {
      grid-template-columns: 1fr;
      gap: 1.25rem;
    }

    .icon-grid {
      grid-template-columns: repeat(10, 1fr);
      gap: 0.3rem;
    }

    .clinical-summary {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
      padding: 1.5rem;
    }

    .viz-title {
      font-size: 1.375rem;
    }

    .metric-value {
      font-size: 1.5rem;
    }

    .metric-title h4 {
      font-size: 0.9375rem;
    }
  }

  @media (max-width: 480px) {
    .icon-grid {
      grid-template-columns: repeat(10, 1fr);
      gap: 0.25rem;
    }

    .grid-icon svg {
      width: 60%;
      height: 60%;
    }
  }
</style>

<script>
  // Clinical data based on medical evidence
  const clinicalData = {
    mri: {
      accuracy: {
        value: '96/100',
        success: 96,
        danger: 4
      },
      complications: {
        value: '2/100',
        success: 98,
        danger: 2
      },
      unnecessary: {
        value: '96/100',
        success: 96,
        warning: 4
      },
      summary: 'MRI-first approach reduces unnecessary procedures by 70% while maintaining 96% sensitivity for clinically significant cancer.'
    },
    traditional: {
      accuracy: {
        value: '75/100',
        success: 75,
        danger: 25
      },
      complications: {
        value: '25/100',
        success: 75,
        danger: 25
      },
      unnecessary: {
        value: '65/100',
        success: 65,
        warning: 35
      },
      summary: 'Traditional biopsy leads to higher complication rates and unnecessary procedures due to blind sampling approach.'
    }
  };

  let currentMethod = 'mri';

  // SVG icon templates
  const icons = {
    success: '<svg viewBox="0 0 24 24" fill="currentColor"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>',
    warning: '<svg viewBox="0 0 24 24" fill="currentColor"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/></svg>',
    danger: '<svg viewBox="0 0 24 24" fill="currentColor"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/></svg>'
  };

  // Create icon grid visualization with clustering
  function createIconGrid(containerId, data, iconType) {
    const container = document.getElementById(containerId);
    if (!container) return;

    container.innerHTML = '';
    
    const totalIcons = 100;
    const icons_array = [];
    
    // Create success icons first (clustered)
    for (let i = 0; i < (data.success || 0); i++) {
      icons_array.push({ type: 'success', icon: icons.success });
    }
    
    // Add warning icons (clustered)
    for (let i = 0; i < (data.warning || 0); i++) {
      icons_array.push({ type: 'warning', icon: icons.warning });
    }
    
    // Add danger icons (clustered)
    for (let i = 0; i < (data.danger || 0); i++) {
      icons_array.push({ type: 'danger', icon: icons.danger });
    }
    
    // Create icon elements with staggered animation
    icons_array.forEach((iconData, index) => {
      const icon = document.createElement('div');
      icon.className = `grid-icon ${iconData.type}`;
      icon.innerHTML = iconData.icon;
      
      // Staggered animation delay
      setTimeout(() => {
        icon.classList.add('animate-in');
      }, index * 20); // 20ms delay per icon
      
      container.appendChild(icon);
    });
  }

  // Update visualization
  function updateVisualization(method) {
    currentMethod = method;
    const data = clinicalData[method];
    
    // Update metric values with animation
    const accuracyValue = document.getElementById('accuracy-value');
    const complicationValue = document.getElementById('complication-value');
    const unnecessaryValue = document.getElementById('unnecessary-value');
    
    // Fade out
    [accuracyValue, complicationValue, unnecessaryValue].forEach(el => {
      el.style.opacity = '0';
      el.style.transform = 'translateY(-10px)';
    });
    
    setTimeout(() => {
      accuracyValue.textContent = data.accuracy.value;
      complicationValue.textContent = data.complications.value;
      unnecessaryValue.textContent = data.unnecessary.value;
      
      // Fade in
      [accuracyValue, complicationValue, unnecessaryValue].forEach(el => {
        el.style.opacity = '1';
        el.style.transform = 'translateY(0)';
      });
    }, 300);
    
    // Update summary text
    const summaryText = document.getElementById('summary-text');
    summaryText.style.opacity = '0';
    setTimeout(() => {
      summaryText.textContent = data.summary;
      summaryText.style.opacity = '1';
    }, 300);
    
    // Update icon grids with animation
    setTimeout(() => {
      createIconGrid('accuracy-grid', data.accuracy, 'accuracy');
    }, 100);
    
    setTimeout(() => {
      createIconGrid('complication-grid', data.complications, 'complication');
    }, 200);
    
    setTimeout(() => {
      createIconGrid('unnecessary-grid', data.unnecessary, 'unnecessary');
    }, 300);
    
    // Update button states
    document.querySelectorAll('.method-btn').forEach(btn => {
      btn.classList.toggle('active', btn.dataset.method === method);
    });
  }

  // Initialize visualization
  document.addEventListener('DOMContentLoaded', () => {
    // Add transition styles
    document.getElementById('accuracy-value').style.transition = 'all 0.3s ease';
    document.getElementById('complication-value').style.transition = 'all 0.3s ease';
    document.getElementById('unnecessary-value').style.transition = 'all 0.3s ease';
    document.getElementById('summary-text').style.transition = 'all 0.3s ease';
    
    // Set up button handlers
    document.querySelectorAll('.method-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        updateVisualization(btn.dataset.method);
      });
    });
    
    // Initialize with MRI data
    setTimeout(() => {
      updateVisualization('mri');
    }, 100);
  });
</script>
